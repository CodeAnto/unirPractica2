nto@ubuntu:~/practica2$ terraform plan

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_linux_virtual_machine.myVM1 will be created
  + resource "azurerm_linux_virtual_machine" "myVM1" {
      + admin_username                  = "anto"
      + allow_extension_operations      = true
      + computer_name                   = (known after apply)
      + disable_password_authentication = true
      + extensions_time_budget          = "PT1H30M"
      + id                              = (known after apply)
      + location                        = "westeurope"
      + max_bid_price                   = -1
      + name                            = "anto-my-first-azure-vm"
      + network_interface_ids           = (known after apply)
      + priority                        = "Regular"
      + private_ip_address              = (known after apply)
      + private_ip_addresses            = (known after apply)
      + provision_vm_agent              = true
      + public_ip_address               = (known after apply)
      + public_ip_addresses             = (known after apply)
      + resource_group_name             = "kubernetes_rg"
      + size                            = "France Central"
      + tags                            = {
          + "environment" = "CP2"
        }
      + virtual_machine_id              = (known after apply)
      + zone                            = (known after apply)

      + admin_ssh_key {
          + public_key = <<-EOT
                ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDhRVHj+P98gfl5L8qIuI7hPgyP80aokJ0jFax7FvKpv/0AtNSGRscqu0UcoUeX89XfvafRvEXDCzLDLeVz23DR+hrpA/snzONLShJ1E5AG+dkye1RxXXilDZWe/YlB8BTseDwmHqEIoeU/G/Dxym2eFTh1l3fpMX/CEu3pudEajCyofPdzBNvwvvXk2R9968CZuut5ljjZateVatZkAA74Ox5+DgOa7n9wGZnyPxv7M/WB+Ah0Y71QR7oo3g/Np+vZAT4KfUE4ObBFaHudkg0WGZa4019BVzlMCvx8MrO7ix5DUoAtpYtEvAtsXoViccSymeqEngKPWKGgwQmuUZ6gcUFVEMdGVRUZmI2pRS9g7AoRslOJgm8hC1OvbFGoDA0KKytWvbnyByN3mFnpl43wlLGmX3H4B5qagZYh3wNKTx/th4LdFxfs1zci95HfOe82zveLuhJM/K2X/nNKSB91TbpshBtfs2H2ZRAODTvdPv1En/5OFES9AinTN6B7BGh3+DXbBlf/b5chKriYYLNWq8oV06j3ipU9H9Y7S2n0vb84emQo0d27mRENo1thvFon/uhLrfU5Chn5dpYpZ06u274FNdRMSitmt9zFF/DcQmVNNjaYQSVBRrAlKW6kgksXddVOd8BpZySV1ojtH4XweA1eBfWJlXuY0ZIadMleBw== anto@ubuntu
            EOT
          + username   = "anto"
        }

      + boot_diagnostics {
          + storage_account_uri = (known after apply)
        }

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = (known after apply)
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }

      + plan {
          + name      = "centos-8-stream-free"
          + product   = "centos-8-stream-free"
          + publisher = "cognosys"
        }

      + source_image_reference {
          + offer     = "centos-8-stream-free"
          + publisher = "cognosys"
          + sku       = "centos-8-stream-free"
          + version   = "1.2019.0810"
        }
    }

  # azurerm_network_interface.myNic1 will be created
  + resource "azurerm_network_interface" "myNic1" {
      + applied_dns_servers           = (known after apply)
      + dns_servers                   = (known after apply)
      + enable_accelerated_networking = false
      + enable_ip_forwarding          = false
      + id                            = (known after apply)
      + internal_dns_name_label       = (known after apply)
      + internal_domain_name_suffix   = (known after apply)
      + location                      = "westeurope"
      + mac_address                   = (known after apply)
      + name                          = "vmnic1"
      + private_ip_address            = (known after apply)
      + private_ip_addresses          = (known after apply)
      + resource_group_name           = "kubernetes_rg"
      + tags                          = {
          + "environment" = "CP2"
        }
      + virtual_machine_id            = (known after apply)

      + ip_configuration {
          + name                          = "myipconfiguration1"
          + primary                       = (known after apply)
          + private_ip_address            = "10.0.1.10"
          + private_ip_address_allocation = "static"
          + private_ip_address_version    = "IPv4"
          + public_ip_address_id          = (known after apply)
          + subnet_id                     = (known after apply)
        }
    }

  # azurerm_network_interface_security_group_association.mySecGroupAssociation1 will be created
  + resource "azurerm_network_interface_security_group_association" "mySecGroupAssociation1" {
      + id                        = (known after apply)
      + network_interface_id      = (known after apply)
      + network_security_group_id = (known after apply)
    }

  # azurerm_network_security_group.mySecGroup will be created
  + resource "azurerm_network_security_group" "mySecGroup" {
      + id                  = (known after apply)
      + location            = "westeurope"
      + name                = "sshtraffic"
      + resource_group_name = "kubernetes_rg"
      + security_rule       = [
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "22"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "SHH"
              + priority                                   = 1001
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
        ]
      + tags                = {
          + "environment" = "CP2"
        }
    }

  # azurerm_public_ip.myPublicIp1 will be created
  + resource "azurerm_public_ip" "myPublicIp1" {
      + allocation_method       = "Dynamic"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "westeurope"
      + name                    = "vmip1"
      + resource_group_name     = "kubernetes_rg"
      + sku                     = "Basic"
      + tags                    = {
          + "environment" = "CP2"
        }
    }

  # azurerm_resource_group.rg will be created
  + resource "azurerm_resource_group" "rg" {
      + id       = (known after apply)
      + location = "westeurope"
      + name     = "kubernetes_rg"
      + tags     = {
          + "environment" = "CP2"
        }
    }

  # azurerm_storage_account.stAccount will be created
  + resource "azurerm_storage_account" "stAccount" {
      + access_tier                      = (known after apply)
      + account_kind                     = "StorageV2"
      + account_replication_type         = "LRS"
      + account_tier                     = "Standard"
      + allow_blob_public_access         = false
      + enable_https_traffic_only        = true
      + id                               = (known after apply)
      + is_hns_enabled                   = false
      + large_file_share_enabled         = (known after apply)
      + location                         = "westeurope"
      + min_tls_version                  = "TLS1_0"
      + name                             = "staccountcp2"
      + primary_access_key               = (sensitive value)
      + primary_blob_connection_string   = (sensitive value)
      + primary_blob_endpoint            = (known after apply)
      + primary_blob_host                = (known after apply)
      + primary_connection_string        = (sensitive value)
      + primary_dfs_endpoint             = (known after apply)
      + primary_dfs_host                 = (known after apply)
      + primary_file_endpoint            = (known after apply)
      + primary_file_host                = (known after apply)
      + primary_location                 = (known after apply)
      + primary_queue_endpoint           = (known after apply)
      + primary_queue_host               = (known after apply)
      + primary_table_endpoint           = (known after apply)
      + primary_table_host               = (known after apply)
      + primary_web_endpoint             = (known after apply)
      + primary_web_host                 = (known after apply)
      + resource_group_name              = "kubernetes_rg"
      + secondary_access_key             = (sensitive value)
      + secondary_blob_connection_string = (sensitive value)
      + secondary_blob_endpoint          = (known after apply)
      + secondary_blob_host              = (known after apply)
      + secondary_connection_string      = (sensitive value)
      + secondary_dfs_endpoint           = (known after apply)
      + secondary_dfs_host               = (known after apply)
      + secondary_file_endpoint          = (known after apply)
      + secondary_file_host              = (known after apply)
      + secondary_location               = (known after apply)
      + secondary_queue_endpoint         = (known after apply)
      + secondary_queue_host             = (known after apply)
      + secondary_table_endpoint         = (known after apply)
      + secondary_table_host             = (known after apply)
      + secondary_web_endpoint           = (known after apply)
      + secondary_web_host               = (known after apply)
      + tags                             = {
          + "environment" = "CP2"
        }

      + blob_properties {
          + cors_rule {
              + allowed_headers    = (known after apply)
              + allowed_methods    = (known after apply)
              + allowed_origins    = (known after apply)
              + exposed_headers    = (known after apply)
              + max_age_in_seconds = (known after apply)
            }

          + delete_retention_policy {
              + days = (known after apply)
            }
        }

      + identity {
          + principal_id = (known after apply)
          + tenant_id    = (known after apply)
          + type         = (known after apply)
        }

      + network_rules {
          + bypass                     = (known after apply)
          + default_action             = (known after apply)
          + ip_rules                   = (known after apply)
          + virtual_network_subnet_ids = (known after apply)
        }

      + queue_properties {
          + cors_rule {
              + allowed_headers    = (known after apply)
              + allowed_methods    = (known after apply)
              + allowed_origins    = (known after apply)
              + exposed_headers    = (known after apply)
              + max_age_in_seconds = (known after apply)
            }

          + hour_metrics {
              + enabled               = (known after apply)
              + include_apis          = (known after apply)
              + retention_policy_days = (known after apply)
              + version               = (known after apply)
            }

          + logging {
              + delete                = (known after apply)
              + read                  = (known after apply)
              + retention_policy_days = (known after apply)
              + version               = (known after apply)
              + write                 = (known after apply)
            }

          + minute_metrics {
              + enabled               = (known after apply)
              + include_apis          = (known after apply)
              + retention_policy_days = (known after apply)
              + version               = (known after apply)
            }
        }
    }

  # azurerm_subnet.mySubnet will be created
  + resource "azurerm_subnet" "mySubnet" {
      + address_prefix                                 = (known after apply)
      + address_prefixes                               = [
          + "10.0.1.0/24",
        ]
      + enforce_private_link_endpoint_network_policies = false
      + enforce_private_link_service_network_policies  = false
      + id                                             = (known after apply)
      + name                                           = "terraformsubnet"
      + resource_group_name                            = "kubernetes_rg"
      + virtual_network_name                           = "kubernetesnet"
    }

  # azurerm_virtual_network.myNet will be created
  + resource "azurerm_virtual_network" "myNet" {
      + address_space         = [
          + "10.0.0.0/16",
        ]
      + guid                  = (known after apply)
      + id                    = (known after apply)
      + location              = "westeurope"
      + name                  = "kubernetesnet"
      + resource_group_name   = "kubernetes_rg"
      + subnet                = (known after apply)
      + tags                  = {
          + "environment" = "CP2"
        }
      + vm_protection_enabled = false
    }

Plan: 9 to add, 0 to change, 0 to destroy.

------------------------------------------------------------------------

Note: You didn't specify an "-out" parameter to save this plan, so Terraform
can't guarantee that exactly these actions will be performed if
"terraform apply" is subsequently run.
